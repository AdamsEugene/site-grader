import { useState } from "react";
import AppButton from "../components/AppButton";
import AppNavbar from "../components/AppNavbar";
import AppFooter from "../components/AppFooter";
import { useNavigate, useLocation } from "react-router-dom";

const steps = [
  {
    id: 1,
    question: "What kinds of products and services do you offer on your site?",
    options: [
      "Arts and crafts",
      "Baby and kids",
      "Books, music, and video",
      "Business equipment and supplies",
      "Clothing",
      "Electronics",
      "Food and drink",
      "Hardware and automotive",
      "Health and beauty",
      "Home and decor",
    ],
  },
  {
    id: 2,
    question: "What is the average annual revenue generated by this site?",
    options: [
      { label: "$0 - $50", value: 50 },
      { label: "$50 - $100", value: 100 },
      { label: "$100 - $500", value: 500 },
      { label: "$500 - $1M", value: 1000000 },
      { label: "$1M - $5M", value: 5000000 },
      { label: "$5M - $10M", value: 10000000 },
      { label: "$10M+", value: 100000000 },
    ],
  },
];

export default function Form1() {
  const [activeStep, setActiveStep] = useState(1);
  const [productService, setProductService] = useState<string>("");
  const [averageRevenue, setAverageRevenue] = useState<number>(0);
  const navigate = useNavigate();
  const location = useLocation();

  const handleOfferClick = (value: string | number) => {
    if (activeStep === 1) {
      setProductService(value.toString());
    } else if (activeStep === 2) {
      // Ensure you're passing the correct value
      setAverageRevenue(value as number);
      console.log(value as number);
    }
    // Automatically go to the next step
    handleNextClick();
  };

  const handleNextClick = () => {
    if (activeStep === steps.length) {
      const email = ""; // Set email value if needed

      // Navigate to loadingPage when all steps are completed
      navigate("/dashboard", {
        state: {
          site_url: location.state?.url, // Retaining the url from previous page
          product_service: productService,
          average_revenue: 19000,
          email: email,
        },
      });
    } else {
      setActiveStep(activeStep + 1);
    }
  };

  const handleBackClick = () => {
    setActiveStep(activeStep > 1 ? activeStep - 1 : 1);
  };

  return (
    <div className="relative flex flex-col h-screen overflow-hidden">
      <AppNavbar
        showControls
        onNextClick={handleNextClick}
        onBackClick={handleBackClick}
        loaderProgress={(activeStep / steps.length) * 100}
      />

      <div className="overflow-auto">
        <div className="px-3 mx-auto grow py-10 w-full max-w-sm space-y-4">
          <p className="text-sm text-gray-400">
            {activeStep} of {steps.length}
          </p>
          <p>{steps[activeStep - 1].question}</p>

          <div className="space-y-2">
            {steps[activeStep - 1].options.map((offer, index) => (
              <AppButton
                key={index}
                label={typeof offer === "string" ? offer : offer.label}
                className="w-full text-left"
                onClick={() =>
                  handleOfferClick(
                    typeof offer === "string" ? offer : offer.value
                  )
                }
              />
            ))}
          </div>
        </div>
      </div>

      <AppFooter />
      <div className="px-3 sm:hidden mx-auto grow-1 py-3 w-full max-w-sm space-y-4">
        <AppButton
          label="Exit"
          className="border-0 text-emerald-700 disabled:text-gray-400 bg-gray-200 w-full"
          onClick={handleNextClick}
        />
        <AppButton
          onClick={handleBackClick}
          label="Back"
          className="border-0 w-full text-emerald-700"
        />
      </div>
    </div>
  );
}
